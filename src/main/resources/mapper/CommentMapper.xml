<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaobin.example.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.xiaobin.example.pojo.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="site" jdbcType="VARCHAR" property="site" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="comment_obj" jdbcType="BIGINT" property="commentObj" />
    <result column="to_nick_name" jdbcType="VARCHAR" property="toNickName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="audit_user" jdbcType="BIGINT" property="auditUser" />
    <result column="audit_time" jdbcType="BIGINT" property="auditTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaobin.example.pojo.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nick_name, email, site, parent_id, comment_obj, to_nick_name, status, create_time, 
    audit_user, audit_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiaobin.example.pojo.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiaobin.example.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaobin.example.pojo.CommentExample">
    delete from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaobin.example.pojo.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_comment (nick_name, email, site, 
      parent_id, comment_obj, to_nick_name, 
      status, create_time, audit_user, 
      audit_time, content)
    values (#{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT}, #{commentObj,jdbcType=BIGINT}, #{toNickName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{auditUser,jdbcType=BIGINT}, 
      #{auditTime,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaobin.example.pojo.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="site != null">
        site,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="commentObj != null">
        comment_obj,
      </if>
      <if test="toNickName != null">
        to_nick_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="auditUser != null">
        audit_user,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        #{site,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentObj != null">
        #{commentObj,jdbcType=BIGINT},
      </if>
      <if test="toNickName != null">
        #{toNickName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="auditUser != null">
        #{auditUser,jdbcType=BIGINT},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaobin.example.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.site != null">
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.commentObj != null">
        comment_obj = #{record.commentObj,jdbcType=BIGINT},
      </if>
      <if test="record.toNickName != null">
        to_nick_name = #{record.toNickName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.auditUser != null">
        audit_user = #{record.auditUser,jdbcType=BIGINT},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_comment
    set id = #{record.id,jdbcType=BIGINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      comment_obj = #{record.commentObj,jdbcType=BIGINT},
      to_nick_name = #{record.toNickName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      audit_user = #{record.auditUser,jdbcType=BIGINT},
      audit_time = #{record.auditTime,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_comment
    set id = #{record.id,jdbcType=BIGINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      comment_obj = #{record.commentObj,jdbcType=BIGINT},
      to_nick_name = #{record.toNickName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      audit_user = #{record.auditUser,jdbcType=BIGINT},
      audit_time = #{record.auditTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaobin.example.pojo.Comment">
    update t_comment
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        site = #{site,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentObj != null">
        comment_obj = #{commentObj,jdbcType=BIGINT},
      </if>
      <if test="toNickName != null">
        to_nick_name = #{toNickName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="auditUser != null">
        audit_user = #{auditUser,jdbcType=BIGINT},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaobin.example.pojo.Comment">
    update t_comment
    set nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      comment_obj = #{commentObj,jdbcType=BIGINT},
      to_nick_name = #{toNickName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      audit_user = #{auditUser,jdbcType=BIGINT},
      audit_time = #{auditTime,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaobin.example.pojo.Comment">
    update t_comment
    set nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      comment_obj = #{commentObj,jdbcType=BIGINT},
      to_nick_name = #{toNickName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      audit_user = #{auditUser,jdbcType=BIGINT},
      audit_time = #{auditTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>